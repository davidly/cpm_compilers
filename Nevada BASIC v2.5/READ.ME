     7/15/84 Additions to Nevada Basic Version 2.5 (2)

The  following  is a description of changes in  Version  2.5

that are not documented in the Manual:



                            AUTO

An  AUTO command has been added to supply line numbers as  a

program is being entered.  The command format is:

                AUTO <start line>,<increment>

<start line> defaults to 10,  increment to 10 also.  To exit

this mode, enter a control-c anywhere on the input line.



                            SAVE

An  additional option has been added to the SAVE command  to

allow  programs to be saved in a protected form.  The format  

is:

                      SAVE filename,P

Note:  if you GET or XEQ a file that has been SAVEd with the

P option,  it cannot be LISTed,  LLISTed,  SAVEd, or EDITed.  

In other words,  once you save it in a protected  form,  you 

cannot obtain a listing of the source again.   An attempt to 

will result in a PR error (protected program).



                           CHAIN

A  CHAIN  command has been added,  that allows  programs  to

execute other programs.  The format is:

                       CHAIN filename
                      10 CHAIN "PGM2"



                             COM



NEVADA  BASIC  now has the ability to remember the  value  of 

assigned  variable  between routines  that  use  CHAIN.   The 

syntax of the COM statement is:

       COM variable1, variable2, variable3(dimension)

The  COM statement lists all variables that should be  placed 

into  the common region,  they can be single variables or the 

COM statement can be used to dimension variables  also.   The 

COM  statement  or  statements MUST appear before  any  other 

statement  other than a REM statment.   Once a  variable  has 

been defined in a COM statement, it need not be listed in any 

other  BASIC  programs  that are CHAINED  to,  the  variables 

automatically are available to any routines CHAINED to.



10 COM START, FINISH, TIME(10)
20 REM
30 START=1
40 FINISH=10
50 CHAIN "NEXT"

10 REM THIS IS PROGRAM NEXT
20 TIME(1)=START+FINISH
30 FOR I=2 TO 10
40 TIME(I)=TIME(I-1)*2
50 NEXT I


It should be noted that once a variable has been declared  in

a  COM  statement it is not necessary (but doesn't  hurt)  to

declare  it  again  in a COM statement in a routine  that  is 

CHAINed to.



                   LONGER VARIABLE NAMES

Variable names may now be upto 64 characters in length  with 

the  restriction  that all variable names starting with  the

letters  FN  are  assummed  to  be  names  of  user  defined 

functions.   Long variable names may contain any combination

of letters and numbers, the first of which must be a letter.



                               DIR

The  DIR  command can be used instead of the CAT command  to

get a list of files on disk.



                LIST, LLIST, DEL ENHANCEMENTS

The  LIST,  LLIST and DEL  commands now accept a dash (-) for

specifing line number ranges in addition to the comma, IE:


LIST 10,100     is the same as    LIST 10-100
DEL 1,30        is the same as    DEL 10-30



                       TRACE COMMANDS

Statement  tracing during program execution is  now  possible

using  the  TRACE statements.   The syntax of the  statements 

are:

                          TRACE ON
                          TRACE OFF

The  TRACE ON will turn statment tracing  on,  the  statement 

number  of the statement about to the executed will be output 

enclosed in square brackets [].  The TRACE OFF statement will 

turn  off  the statement tracing.   These statements  can  be 

placed in a program to aid in program debugging.



                         INPUT FUNCTION

An  INPUT function has been added to read a single  character 

from keyboard.  The function requires an argument, which can

be anything and is ignored.


1 REM
2 REM THIS ROUTINE SHOW THE USE OF THE INPUT FUNCTION TO READ A
3 REM SINGLE CHARACTER 
4 REM
5 I$= INPUT (0)
6 IF I$="" THEN 5
7 PRINT I$;
8 GOTO 5



                       ERROR MESSAGES

All  the 2 letter errors codes listed in Appendix 3 have been 

replaced  with  explicit  error  texts.   When  an  error  is 

encountered,  an  message explaining the error  that  occured 

will be produced.



                       INITIAL STARTUP

When  you  first start up basic you now have  the  option  of 

removing  the  matrix  math  package if you  don't  need  it.

Removing  it  will give you some  extra  memory.   After  the 

matrix  package  has  been removed,  you have the  option  of 

removing the extended functions,  such as the trig functions, 

EXP functions.   Use of any function or matrix operator  that

has  been  deleted results in a NOT IMPLEMENTED  error  being 

produced.


                          WARNING:

All  keywords  MUST be surrounded by at least one  blank  for 

BASIC  to interpret them correctly.   If you should recieve a 

syntax error on a statement that appears to be  correct,  see 

if  you have possibly left out a blank either before or after 

a keyword.

                          WARNING:

If  you  are upgrading from a version previous to  2.5,  you 

need  to  use your PREVIOUS version to save ALL  your  Basic 

programs  in TEXT format,  programs saved in  semi-compilied

format  by  any version prior to 2.5 will NOT  load  and  run

correctly using version 2.5.

