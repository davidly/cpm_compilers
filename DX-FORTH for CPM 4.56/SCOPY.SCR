\ Information                                                                                                                   Screen copy utilityoad - main screen                                            empty forth definitions decimal application                     warning on                                                                                                                      : TITLE ." SCOPY ver 2.1" cr ;                                                                                                  cr ." Compiling: "  title  2 load                                                                                               cr ." Save to disk? "  y/n  [if]                                \  tally @  pad + #256 + limit s0 @ - +  set-limit                turnkey program SCOPY                                         [then]                                                                                                                                                                                                                                                                                                                          \ Load - defaults                                               variable TALLY  0 tally !           \ run-time memory tally     defer ?STOP   ' noop is ?stop       \ user abort check          defer CON-IO  ' bios-io is con-io   \ default console i/o mode  defer ONERROR ' noop is onerror     \ reset on-error handler    defer ONSTART ' noop is onstart     \ startup initialization                                                                    blk @ 1+ #screens 1- thru       \ load electives & application                                                                   ' ?stopkey is ?stop            \ enable user abort             \ ' dos-io is con-io             \ enable console redirection    :noname exists @ if end                                          delout ; +is onerror          \ delete outfile on error       \ wrtchk off                     \ disable overwrite check                                                                                                                                      \ Electives                                                     1 fload DOSLIB  \ DOSLIB library                                 _Errors        \ error handler                                 \ _Inout1        \ number output                                \ _Inout2        \ deferred output                              \ _Compare1      \ basic compare                                 _String1       \ basic strings                                 \ _String2       \ extra strings                                 _Parse1        \ cmdline parsing                                _Parse2        \ cmdline extra                                  _Files         \ default files                                 \ _Bread         \ buffer read char                             \ _Bread2        \ buffer read data/text                        \ _Bwrite        \ buffer write char                            \ _Bwrite2       \ buffer write data/text                                                                                       \ Help screen - HELP                                            : HELP ( -- )  dos-io  cr cr title                                cr ." Use: SCOPY [opt] file1[.SCR] [file2[.SCR]]" cr            cr ." -Fn  First[,last[,dest]] block"                           cr ." -Ln  Last source block"                                   cr ." -Dn  First destination block"                             cr ." -O   Overwrite existing screens"                          cr ." -W   Wipe/create file"                                    cr ." -P   Disable prompt"                                      cr ." -Cn  Cols[,rows[,block size]]"                            cr ." -V   View screens"                                        cr                                                                                                                                                                                                                                                                                                                            \ Help screen - HELP                                              cr ." default: copy all, insert, prompt, 64x16 1024"            cr                                                              cr ." Copy screens from file1 inserting into file2."            cr ." File created if not exist. Unwritten blocks are"          cr ." blank-filled. -1 sets highest block. Omit file2"          cr ." to list index."                                           con-io  abortariables                                                     integer FIRST        \ first source screen                      integer LAST         \ last source screen                       integer DEST         \ first destination screen                 variable PROMPT      \ permission                               variable INSERTING   \ mode insert/overwrite                    variable VIEWING     \ mode 1=view  -1=index                    variable WIPING      \ mode copy/blank                          variable EXISTS      \ output file exists (assume true)                                                                         10 constant #LINES   \ #lines to display                                                                                        integer BSIZE        \ block size                               integer #COLS        \ columns to view                          integer #ROWS        \ rows to view                                                                                             \ SETFIRST SETCOLS                                              \ Set first/last/dest                                           : SETFIRST ( a u -- a' 0 )                                        firstnum if  dup to first  to dest                              nextnum  if  0 of  first  then  to last                         nextnum  if  to dest                                            then then then ?end ;                                                                                                         \ Set cols, rows, block size                                    : SETCOLS ( a u -- a' 0 )                                         firstnum if  0 of  #cols  then  to #cols                        nextnum  if  0 of  #rows  then  to #rows                        nextnum  if  0 of  bsize  then  to bsize                        then then then ?end ;                                                                                                                                                                         \ SETOPT                                                        \ Set switch                                                    :noname ( a u char -- a' u' )                                     upcase                                                          [char] F  of  setfirst  end                                     [char] L  of  /num  to last  end                                [char] D  of  /num  to dest  end                                [char] O  of  inserting off  end                                [char] W  of  wiping on  inserting off  end                     [char] P  of  prompt off  end                                   [char] C  of  setcols  end                                      [char] V  of  1 viewing !  end                                  .bad ;  is setopt                                                                                                                                                                                                                                             \ PARSEFN                                                       \ Parse filenames                                               :noname ( -- )                                                    argv 0= if  help  then                                          wiping @ not if                                                   s" SCR" +ext  ifile !fname                                      argv 0= if ( view or index)                                       viewing @  dup 0= or  viewing !  \ 1=view -1=index            end                                                           then ( wipe or copy)                                            s" SCR" +ext  ofile !fname  wiping @ if end                     ifile @fname  ofile @fname  compare if end                      cr ." Cannot copy "  .ifile  ." onto self"  .abort            ;  is parsefn                                                                                                                                                                                   \ WORKBUF BLANKBUF ?PARTIAL                                     \ Work buffer for block read/write                              : WORKBUF ( -- adr len )  pad bsize ;                                                                                           \ Clear workbuf                                                 : BLANKBUF ( -- )  workbuf blank ;                                                                                              \ Partial block error                                           : ?PARTIAL ( flag -- )  if                                          cr ." Partial block read - may not be screen file" .abort     then ;                                                                                                                                                                                                                                                                                                                                                                                        \ READSRC READDEST WRITEDEST                                    \ Read block from source                                        : READSRC ( -- )                                                  workbuf read nip  bsize - ?partial ;                                                                                          \ Read block from destination; flag=partial/unwritten           : READDEST ( -- flag )                                            workbuf ofid fread nip  bsize - ;                                                                                             \ Write block to destination                                    : WRITEDEST ( -- )  workbuf write ;                                                                                                                                                                                                                                                                                                                                                             \ >OFFSET >SRC >DEST HIGHEST                                    \ Convert blk# to file offset                                   : >OFFSET ( blk# -- ud )  bsize um* ;                                                                                           \ Reposition ifile pointer                                      : >SRC ( blk# -- )  >offset seekin ;                                                                                            \ Reposition ofile pointer                                      : >DEST ( blk# -- )  >offset seekout ;                                                                                          \ Get highest block#  -1 = empty file                           : HIGHEST ( handle -- blk# )                                      >fid fsize  bsize um/mod  swap ?partial  1- ;                                                                                                                                                                                                                 \ SETLAST SETDEST SCREENCHECK SETUP                             \ Calc last screen# from filesize  empty file = 0               : SETLAST ( handle -- )  highest  last umin  0 max  to last ;                                                                   \ Test partial, append if DEST = -1                             : SETDEST ( -- )                                                  dest 0< if  ofile highest 1+ to dest  then ;                                                                                  \ Check screens are valid                                       : SCREENCHECK ( -- )                                              last  first  u< if                                                cr ." Invalid screen number" .abort                           then ;                                                                                                                        \ Set/check screen numbers                                      : SETUP ( handle -- )  setlast  screencheck ;                   \ ?MOVEDEST /SOURCE                                             \ Move dest blocks if overlapping and inserting                 : ?MOVEDEST ( -- )                                                dest  ofile highest  2dup > not  inserting @ and if               dup rot - 1+ ( hi #) >r                                         last first - 1+ ( hi offset)  r> 0 ?do                            over   >dest  readdest drop  \ read                             2dup + >dest  writedest      \ write                            swap 1- swap                 \ blk#                           loop                                                          then  2drop ;                                                                                                                 \ Set source position                                           : /SOURCE ( -- )  first >src ;                                                                                                                                                                  \ /DEST ?OVERWRITE                                              \ Set dest position blank-filling unwritten blocks              : /DEST ( -- )                                                    ?movedest  0 >dest  dest  0 ?do                                   outpos ( ud)                                                    readdest if ( unwritten)                                          ( ud) seekout  blankbuf  writedest                            else  2drop  then                                             loop ;                                                                                                                        \ Display screen copy mode                                      : ?OVERWRITE ( -- )                                               cr  exists @  inserting @ not  and if                             beep  ." Warning: overwriting"                                else  ." inserting"  then  ."  screens" ;                                                                                     \ .THRU .WIPING .COPYING ?PROCEED                               \ Display first/last screen#                                    : .THRU ( -- )  first u. ." thru " last u. ;                                                                                    \ Display screens to blank                                      : .WIPING ( -- )  ?overwrite  cr ." Blank: "  .thru ;                                                                           \ Display screens to copy                                       : .COPYING ( -- )  ?overwrite                                     cr ." Copy infile: "  .thru  ." to outfile: "  dest u. ;                                                                      \ Check permission                                              : ?PROCEED ( -- )                                                 prompt @ if  ." ? "  y/n if end  .abort  then ;                                                                                                                                               \ .INDEX .SCREEN VIEW                                           : .INDEX ( cnt scr# -- cnt' )                                     cr  3 .r  space  workbuf drop  #cols  -trailing type ;                                                                        : .SCREEN ( cnt scr# -- cnt' )                                    cr cr  3 spaces u.  drop  workbuf  #rows 0 do                     cr  i 2 .r  space  2dup  #cols min  0 max ( for ultraForth)     -trailing type  #cols /string                                 loop  2drop  #lines 1- ;                                                                                                      : VIEW ( -- )                                                     ifile setup  /source  0 ( cnt)  last 1+  first  do                readsrc  i  viewing @  0< if  .index  else  .screen  then       1+  #lines of  0  key stopkey=  if break  then                loop drop  cr ;                                                                                                               \ COPY                                                          \ Copy screens                                                  : COPY ( -- )                                                     ifile setup  setdest  .copying ?proceed  /source /dest          cr  last 1+  first  do                                            readsrc  writedest  [char] . emit                             loop  crlank screens                                                 : WIPE ( -- )                                                     ofile setup  .wiping ?proceed  /dest                            blankbuf  cr  last 1+  first  do                                  writedest  [char] . emit                                      loop  cr ;                                                                                                                    \ Display file write mode                                       : ?EXISTS ( -- )                                                  ." ... "  exists @ if  ." exists - will be modified"            else  ." creating"  then  cr ;                                                                                                                                                                                                                                                                                                \ OPENFILES                                                     : OPENFILES ( -- )                                                wiping @ not if                                                   cr ." i: " .ifile  r/o openin                                 then                                                            viewing @ not if                                                  cr ." o: " .ofile  r/w ?openout  exists !  ?exists            then                                                            crun application                                               : (RUN) ( -- )                                                    openfiles                                                       wiping @ if                                                       wipe                                                          else                                                              viewing @ if  view  else  copy  then                          then                                                            closefileset application defaults                                      : DEFAULTS ( -- )                                                 0 to first  -1 to last  0 to dest                               64 to #cols  16 to #rows  1024 to bsize                         inserting on  wiping off  viewing off  exists on  prompt on   ;                                                                                                                               defaults                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \ RUN PROGRAM                                                   \ Run application with error handling                           : RUN ( -- )                                                      ['] (run) catch ?dup if  >r onerror r> throw  then ;                                                                          \ Main                                                          : PROGRAM ( -- )                                                  onstart           \ startup initialization                      con-io            \ default console mode                        defaults          \ set defaults                                cr title          \ show application name                       cmdtail parsecmd  \ process command-line                        run               \ run application                             cr ." done"       \ show success