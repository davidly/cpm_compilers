		STRING Library Documentation
 
The STRING library contains functions to deal with null-
terminated character strings.  These functions are similar to
their Unix counterparts.
 
 
FUNCTIONS

strlen(str) char *str;
	returns a count of the number of characters in the
	string 'str'.  The null character at the end of the
	string is not included in the count.

strcat(dest, sour) char *dest, *sour;
	appends the string at 'sour' to the end of the string at
	'dest'.  A null character terminates the end of the new
	'dest' string.  The space reserved for 'dest' must be
	long enough to hold the resulting string.  The function
	returns 'dest'.

strncat(dest, sour, n) char *dest, *sour; int n;
	works like strcat(), except that a maximum of n
	characters from the source string are transferred to the
	destination.

strcmp(str1, str2) char *str1, *str2 ;
	returns an integer less than, equal to, or greater than
	zero depending on whether the string at 'str1' is less
	than, equal to, or greater than the string at 'str2'.

strncmp(str1, str2, n) char *str1, *str2; int n;
	works like strcmp, except that a maximum of n characters
	are compared.

strcpy(dest, sour) char *dest, *sour;
	copies the string at 'sour' to 'dest'.

strncpy(dest, sour, n) char *dest, *sour; int n;
	works like strcpy(), except that n characters are
	transferred regardless of the length of the source
	string.  If the source string is too long it is
	truncated and a null character is placed at the end of
	the destination string.

strchr(str, c) char *str, c;
	returns a pointer to the first occurrence of the
	character 'c' in the string at 'str'.  A NULL pointer is
	returned if the character is not found.

strrchr(str, c) char *str, c;
	works like strchr(), except that the rightmost
	occurrence of the character is searched for.
