		CTYPE Library Documentation
 
The functions in this library classify characters into one of a
number of groups.  They return true (non-zero) if the character
belongs to the given group and false (zero) if it doesn't.
 
 
FUNCTIONS
 
isdigit(c) char c;
	determines if c is a decimal digit (0-9) 

isupper(c) char c;
	determines if c is an uppercase letter (A-Z)

islower(c) char c;
	determines if c is a lowercase letter (a-z)

isspace(c) char c;
	determines if c is a white-space character (space, tab, 
	vertical tab, carriage return, line feed or form feed)

ispunct(c) char c;
	determines if c is a punctuation character (all ASCII
	codes except control codes or alphanumerics)

iscntrl(c) char c;
	determines if c is a control character (ASCII codes 0-31
	or 127)

isalnum(c) char c;
	determines if c is an alphanumeric (A-Z, a-z or 0-9)

isxdigit(c) char c;
	determines if c is a hexadecimal digit (0-9, A-Z or a-z)

isalpha(c) char c;
	determines if c is alphabetic (A-Z or a-z)

isprint(c) char c;
	determines if c is a printable character (ASCII codes
	32-126)

isgraph(c) char c;
	determines if c is a graphic symbol (ASCII codes 33-126)

isascii(c) char c;
	determines if c is an ASCII character (0-127)

toupper(c) char c;
	returns the uppercase equivalent of c if c is lowercase,
	otherwise it returns c unchanged

tolower(c) char c;
	returns the uppercase equivalent of c if c is lowercase,
	otherwise it returns c unchanged

toascii(c) int c;
	returns the ASCII equivalent of c, effectively just by
	masking with 0x7f
 
 
 
INTERNAL DOCUMENTATION 
 
All the classification functions use a table with one entry for
each ASCII character.  An entry is also included for EOF.  The
argument of each classification funtion must be an ASCII
character if valid results are to be obtained.  Use toascii() if
necessary.
