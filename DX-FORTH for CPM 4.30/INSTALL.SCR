\ Install - Information                                                                                                         This is the source to the DX-Forth installer program.                                                                           INSTALL customises the DX-Forth compiler and turnkey            applications for a variety of video terminals.  Also,           the CPU speed, terminal delay times, arrow key codes            and no-warmboot option may be adjustedoad block                                                    empty forth definitions  decimal                                application                                                                                                                     : TITLE ( -- )  ." DX-INSTALL 1.10" cr ;                                                                                        cr .( loading ) title  2 #screens 1- thru                                                                                       cr .( Save to disk? ) y/n [if]                                    turnkey install INSTALL                                       [then]                                                                                                                                                                                                                                                                                                                                                                                          \ ZINS                                                          1 floadvariable cf                                                                                                                     : 'FID ( -- a )  cf @ ;                                         : FID ( -- fid )  'fid @ ;                                      : 'FNAME ( -- a )  'fid cell+ ;                                 : SETFNAME ( a n -- a n' )  16 min  2dup 'fname place ;         : .FNAME ( -- a n )  'fname count type ;                                                                                        warning off                                                     : FILE  create [ 1 cells 16 1+ + ] literal allot  does> cf ! ;  warning on                                                                                                                      \ File handles                                                  file IN-FILE   file DTA-FILE                                                                                                    \ #TERMS TLEN TERMINAL TSIZE TEMP IN-BASE DTA-BASE BUFSIZE      variable #TERMS         \ number of terminals in dta file       variable TLEN           \ length of each term definition        variable TERMINAL       \ terminal selected                                                                                     $1D0 $14F - constant TSIZE    \ size term install area                                                                          \ Storage areas                                                 : TEMP     ( -- adr )  pad 80 + ;       \ temporary storage     : IN-BASE  ( -- adr )  temp 256 + ;     \ target file (2 recs)  : DTA-BASE ( -- adr )  in-base 256 + ;  \ dta file                                                                              : BUFSIZE ( -- u )  sp@ 256 - dta-base - ;                                                                                                                                                                                                                      \ TDATA !STR !WOR !BYT                                          \ Get base address for n'th terminal in DTA                     : TDATA ( n -- adr )                                              tlen @  *  dta-base +  4 + ;                                                                                                  \ Copy data from terminal data offset to adr                                                                                    : !STR ( adr offs -- )                                            terminal @  tdata +  count rot place ;                                                                                        : !WOR ( adr offs -- )                                            terminal @  tdata +  @ swap ! ;                                                                                               : !BYT ( adr offs -- )                                            terminal @  tdata +  c@ swap c! ;                                                                                             \ TNAME TINIT TEXIT TCM TCLS THIL TNOR TINS                     hex                                                             \ Store terminal data strings                                   : TNAME ( -- ) 153  0 !str ;    \ terminal name                 : TINIT ( -- ) 16B 16 !str ;    \ term init                     : TEXIT ( -- ) 17B 26 !str ;    \ term exit                     : TCM   ( -- ) 18B 36 !str ;    \ cursor motion template        : TCLS  ( -- ) 1A2 4D !str ;    \ clear screen                  : THOM  ( -- ) 1A8 53 !str ;    \ home cursor                   : THIL  ( -- ) 1C2 5B !str ;    \ hilight video                 : TNOR  ( -- ) 1C8 61 !str ;    \ normal video                  : TEOL  ( -- ) 1BC 69 !str ;    \ clear to end-of-line          : TINS  ( -- ) 1AE 6F !str ;    \ insert line                   : TDEL  ( -- ) 1B4 75 !str ;    \ delete line                   decimal                                                                                                                         \ TBIN TPOS TOFFS TDCM TDCLS TDEOL TCR                          hex                                                             \ Store terminal data values                                    : TBIN  ( -- ) 19B 46 !byt ;    \ binary mode                   : TPOS  ( -- ) 19E 47 !wor ;    \ col row pos                   : TOFFS ( -- ) 19C 49 !wor ;    \ col row offset                : TDCM  ( -- ) 1A0 4B !wor ;    \ cm delay                      : TDCLS ( -- ) 1BA 59 !wor ;    \ cls delay                     : TDEOL ( -- ) 1CE 67 !wor ;    \ eol delay                     : TCR   ( -- ) 168 7B !wor ;    \ # cols rows                   decimal                                                                                                                                                                                                                                                                                                                                                                                         \ SWAP-OUT SWAP-IN MOVE-DATA                                    \ Save memory data before install                               : SWAP-OUT ( -- )                                                 $124 @ temp !  $14F temp cell+ tsize move ;                                                                                   \ Restore memory data after install                             : SWAP-IN ( -- )                                                  temp @ $124 !  temp cell+ $14F tsize move ;                                                                                   \ Move memory data to in-file                                   : MOVE-DATA ( -- )                                                $124 @ in-base $24 + !  ( CPU speed)                            $14F in-base $4F + tsize move ;                                                                                                                                                                                                                               \ CMD                                                           \ Parse the CP/M command line for the n'th blank delimited      \ parameter.  Return the address and length and a true flag if  \ found, otherwise return false.                                : CMD ( n -- adr u -1 | 0 )                                       0 0 rot  $80 count  rot 0 ?do                                     2nip                                                            bl skip  2dup bl scan                                           rot over - -rot                                               loop 2drop                                                      dup if  -1  else  and  then ;                                                                                                                                                                                                                                                                                                                                                                 \ HELP ARG FILE-ERROR                                           \ Show help and exit                                            : HELP ( -- )                                                     cr ." Installer for DX-Forth and compiled applications." cr     cr ." Use: INSTALL filename[.com] [termfile[.dta]]" abort ;                                                                   \ Get argument - if none show help                              : ARG ( n -- adr u )                                              cmd 0= if ( none ) help then ;                                                                                                \ Encountered file error, display msg, filename then quit       : FILE-ERROR ( adr u -- )                                         cr type  .fname  abort ;                                                                                                                                                                                                                                      \ READ-TARGET                                                   \ Read first 2 records of target file into memory               : READ-TARGET ( -- )                                              in-file                               \ select filehandle       1 arg                                 \ get first filename      s" COM" +ext                          \ append filetype         setfname r/w open-file                \ open target file        if S" Error opening: " file-error then  'fid !                  in-base 256  2dup erase               \ clear buffer            fid read-file drop                    \ read 2 records          256 =                                 \ check if got 2          in-base $11 + @  18051 =              \ check DX-Forth id.      and 0= if                                                         s" Not a DX-Forth application: " file-error                   then ;                                                                                                                        \ READ-DTA                                                      \ Read DTA file into memory                                     : READ-DTA ( -- )                                                 dta-file                              \ select filehandle       2 cmd                                 \ if second filename      if    s" DTA" +ext                    \ append filetype         else  s" INSTALL.DTA"  then           \ else use default        setfname r/o open-file                \ open DTA file           if  S" Error opening: " file-error  then  'fid !                dta-base bufsize  2dup erase          \ buffer                  fid read-file 2drop                   \ read DTA file           fid close-file drop                   \ close file              dta-base  dup @ #terms !              \ get # terminals         2+ @ tlen ! ;                         \ get term data length                                                                                                                                  \ WRITE-TARGET CLOSE-TARGET CLS                                 \ Write data to file                                            : WRITE-TARGET ( -- )                                             in-file                       \ select filehandle               0. fid reposition-file drop   \ reset filepointer               in-base 256 fid write-file    \ write 2 recs                    if s" Error writing: " file-error then ;                                                                                      \ Close target file                                             : CLOSE-TARGET ( -- )                                             in-file fid close-file                                          if s" Error closing: " file-error then ;                                                                                      \ Simple clear screen                                           : CLS ( -- )  30 0 do cr loop ;                                                                                                 \ SELECT INVALID ANYKEY                                         \ Select number in range n1 to n2.  Return n3 true | false      : SELECT ( n1 n2 -- n3 -1 | 0 )                                   cr ." Select: "  pad 10 accept cr     \ get input string        ?dup if                                                           pad swap number? if                 \ convert to number           drop  dup  2swap between          \ check range                 dup 0= if  and  then                                          end                                                           then  2drop  0 ;                                                                                                              \ Bad or empty input                                            : INVALID ( -- )  beep cr ." Invalid or nothing entered" cr ;                                                                   \ Wait for a keypress                                           : ANYKEY ( -- )  cr ." Press any key to continue "  key drop ;  \ CPU-SPEED                                                     \ Edit CPU speed                                                : CPU-SPEED ( -- )                                                cls  ." CPU speed is currently "                                in-base $24 +  @ u.                                             ." MHz.  Change? "  y/n if                                        cr ." Enter new value (1-8191) "                                1 8191 select if                                                  in-base $24 +  !                                              else  invalid  then                                             anykey                                                        then ;                                                                                                                                                                                                                                                                                                                        \ !TERM                                                         \ Install selected terminal                                     : !TERM ( -- )                                                    swap-out                                                        terminal @  #terms @  = if                                        zenv 0= if  beep cr ." Z-SYSTEM not present" cr  end            zins                                                          else                                                              tname tinit texit tcm tcls thom thil tnor teol tins tdel        tbin tpos toffs tdcm tdcls tdeol tcr                          then                                                            move-data  swap-in ;                                                                                                                                                                                                                                                                                                          \ .TERMINAL .TERMS                                              : .TERMINAL ( n -- )                                              dup #terms @ = if                                                 s" Z-SYSTEM TERMCAP"                                          else                                                              dup #terms @ > if drop end                                      dup tdata count                                               then                                                            rot 1+ 2 .r  space  dup >r  type  23 r> - spaces ;                                                                            \ Show one page of terminals                                    : .TERMS ( n -- )                                                 cr  12 0 do                                                       cr  dup .terminal  dup 12 + .terminal  1+                     loop  drop  cr ;                                                                                                              \ FIRST GET-TERM                                                variable FIRST                                                                                                                  \ Display terminals and select                                  : GET-TERM ( -- )                                                 0 first !  begin                                                  first @  .terms                                                 1 #terms @ 1+ select if ( install it)                             1- terminal !  !term  anykey  cpu-speed                       end                                                             invalid  cr ." Press any key for more or ESC to exit "          key 27 -                                                      while                                                             first @  24 +  dup #terms @ < and  first !                    repeat ;                                                                                                                      \ TERM-SELECT                                                   \ Edit terminal type                                            : TERM-SELECT ( -- )                                              cls  ." Terminal is currently "                                 in-base $53 +  count  -trailing type                            ." .  Change? "  y/n if                                           get-term                                                      thenhange the delay specified by the offset and string           : CHG-DELAY ( offs adr u -- )                                     cr cr  type ."  delay is currently "                            dup >r  in-base +  c@ .                                         ." mS.  Change? " y/n if                                          cr ." Enter new value (0-255) "                                 0 255 select  if                                                  r@ in-base +  c!                                              else  invalid  then                                             anykey                                                        then  r> drop ;                                                                                                                                                                                                                                                                                                               \ DELAY-TIMES                                                   \ Change delay times                                            : DELAY-TIMES ( -- )                                              cls                                                             $A0  s" Cursor Motion       "  chg-delay                        $BA  s" Clear Screen        "  chg-delay                        $CE  s" Clear to End-of-Line"  chg-delayhange the key specified by the offset and string             : CHG-KEY ( offs adr u -- )                                       cr cr  type ."  key code is currently "                         dup >r  in-base +  c@                                           hex  s>d <# # # #> type  decimal                                ."  hex.  Change? " y/n if                                        cr ." Enter new value in hexadecimal (00-FF) "                  hex  0 255 select  decimal  if                                    r@ in-base +  c!                                              else  invalid  then                                             anykey                                                        then  r> drop ;                                                                                                                                                                                                                                               \ KEY-CODES                                                     \ Change key codes                                              : KEY-CODES ( -- )                                                cls  ." Use default WordStar arrow keys? "  y/n  if               $18051304.  in-base $4F +  2!                                 else                                                              $4F  s" UP    arrow"  chg-key                                   $50  s" DOWN  arrow"  chg-key                                   $51  s" RIGHT arrow"  chg-key                                   $52  s" LEFT  arrow"  chg-key                                 then ;                                                                                                                                                                                                                                                                                                                                                                                        \ NOBOOT                                                        \ Change the warmboot option                                    : NOBOOT ( -- )                                                   cls  ." NO WARMBOOT is currently "                              in-base $10 +  c@  if ." ON"  else ." OFF"  then                ." .  Change? "  y/n  if                                          in-base $10 +  dup c@  0=  swap c!                              cr anykey                                                     thenave setup to disk and exit                                   : SAVE-SETUP ( -- )                                               beep cr ." Save current setup to disk? " y/n if                   write-target close-target  unnest ( exit menu loop)           then ;                                                                                                                        \ Display main menu                                             : .MENU ( -- )                                                    cr ."    1. Terminal selection"                                 cr ."    2. CPU speed"                                          cr ."    3. Time delays"                                        cr ."    4. Key codes"                                          cr ."    5. No Warmboot"                                        cr ."    6. Save changes and exit" ;                                                                                          \ MENU                                                          \ Main menu loop. Exit if invalid option or nothing entered.    : MENU ( -- )                                                     begin                                                             .menu  cr  1 6 select                                         while                                                             case  1 of  term-select  endof                                        2 of  cpu-speed    endof                                        3 of  delay-times  endof                                        4 of  key-codes    endof                                        5 of  noboot       endof                                        6 of  save-setup   endof                                  endcase  cls                                                  repeat ;                                                                                                                                                                                      \ INSTALL                                                       \ Main                                                          : INSTALL ( -- )                                                  cls title                                                       read-target                                                     read-dta                                                        menu